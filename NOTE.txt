Basic Go Tutorial

PART 1
- Install Go
- Hello World
- Value , Data, Variable, Const
- Int float string bool
- Literal int float string bool rune
- Builtin operator
- Function
- Package
- Standard package
- Package same module
- Package from external module

PART 2
- Control
- if, else, else if, variable if scope
- logical operators, ==, != , >, <, >=, <=
- switch, case, variable switch scope
- for
- break
- continue

PART 3
- array (fix size) fix type
- slice (dynamic size) fix type
- make
- append element of slice
- access and assign element
- slicing operator of array and slice
- initial with literal array/slice
- map fix type of key and value
- make
- append element of map
- access and assign element
- delete element
- initial with literal map
- check existing element
- for range for array slice
- for range for map

PART 4
- struct
- define new type name for struct
- define field for struct
- assign and access value of field
- initial with literal struct
- compose of array, slice, map, struct
- field with struct type, map type, array type, slice type
- map with struct key, map with struct value, map with array key, map with array value, map with slice value
- array with struct value, array with map value, array with slice value, array with array value
- slice with struct value, slice with map value, slice with slice value, slice with array value
- public, private field

PART 5
- pointer and function passing
- pointer type and value
- address & operator
- dereference or indirect * operator
- passing with pointer value
- passing with map value
- passing with struct value

PART 6
- type and method (basic OOP)
- almost method is a method of struct type
- dot operator to call method
- receiver parameter automatic passing
- pointer receiver
- nil value can call method
- chain of dot access field and method call

PART 7
- interface type define set of method
- interface type can assign any value the have method set like when interface is defined
- use interface as function or method parameter
- use interface as field of struct
- use interface as element of map
- use interface as element of array/slice
- nil interface != nil pointer != nil slice != nil map and nil != nil
- type assertion
- type convert
- type switch

PART 8
- anonymous function and function type
- closure scope
- for loop scope
- defer
- panic
- recover

PART 9
- define new type for any type
- define new type for int, float, bool, string
- define new type for map, array, slice
- literal value of new type
- assign literal value of underlying type
